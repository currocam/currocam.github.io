[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Curro Campuzano Jiménez",
    "section": "",
    "text": "About me\nHi! I’m Curro Campuzano Jiménez. I’m currently a PhD student at Svardal Lab. Previously, I worked in the Department of Environmental Science, where I developed reproducible and automatic pipelines to process meta-transcriptomics data. I completed my master’s in bioinformatics at BiRC, where I focused my thesis on the genomic offset framework and the ecological genetics of thyme. I am also an open-source enthusiast: I like to contribute to the software I use.\n\n\nProjects\nIf you are interested, you can learn more about my projects here.\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nAssessing reliability of learning Gaussian graphical models from microbial abundances\n\n\n\n\n\n\n\n\n\n\n\nJan 18, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nNeighbor-joining in Rust\n\n\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWhole Genome Sequencing Poster\n\n\n\n\n\n\n\n\n\n\n\nOct 18, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nA Chromosome-level assembly of Thymus vulgaris\n\n\n\n\n\n\n\n\n\n\n\nJun 26, 2023\n\n\nCurro Campuzano Jiménez\n\n\n\n\n\n\n\n\n\n\n\n\nSnakemake pipelines in the High-Throughput Sequencing Center of AU-ENVS\n\n\n\n\n\n\n\n\n\n\n\nJun 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nAn R library to work with HMMER\n\n\n\n\n\n\n\n\n\n\n\nJun 24, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/birc-thyme/index.html",
    "href": "posts/birc-thyme/index.html",
    "title": "A Chromosome-level assembly of Thymus vulgaris",
    "section": "",
    "text": "This semester, I worked with my supervisor Thomas Bataillon as part of my Master’s program at BiRC on a Bioinformatics project. Our goal was to use Pacbio HiFi reads to obtain a chromosome-level assembly of Mediterranean thyme.\n\n\n\nMediterranean thyme (T. vulgaris) Obtained from Herbari virtual del Mediterrani Occidental\n\n\nThe primary objective was to use the genome of a closely related species to improve the contiguity of the highly fragmented de novo assembly. Although further research is required, we achieved promising results. For example, we increased the N50 from 1.87 Mb (n=133) at the contig level to 48.92 Mb (n=8) at the scaffold level. An outline of the pipeline can be found here.\nWorking with plant genomes has been challenging, and I have learned a lot about genome assembly with long reads and plant genomes. Additionally, this project was part of a broader investigation into the genetic and ecological diversity of Mediterranean thyme, a subject that I found fascinating.\nI utilized the GenomeDK cluster at the center for the data analysis pipeline, employing various programs and programming languages, including R, Python, Julia, and Bash.\nAll the code and the slides I used for the project defense are publicly available on GitHub, which you can access at https://currocam.github.io/BiRC-Thyme/"
  },
  {
    "objectID": "posts/birc-nj/index.html",
    "href": "posts/birc-nj/index.html",
    "title": "Neighbor-joining in Rust",
    "section": "",
    "text": "As part of my Master’s program at BiRC, I made a Rust crate (jargon for package/library) for building phylogenetic trees from large Phylip distance matrices using the Neighbor-Joining algorithm.\nOur goal was to implement an efficient command-line application that implemented the canonical algorithm (with similar optimization tricks as in QuickTree) and the RapidNJ heuristic with a twist: using B-Trees rather than vecs. B-trees are (unsurprisingly) tree data structures that allow maintaining sorted data and perform insertions and deletions in \\(\\mathcal O(\\log n)\\), with a larger constant factor than binary search trees, but minimizing cache-misses which makes them faster in modern computers.\nI was please to find that my canonical implementation was significantly faster than QuickTree (kudos to Rust for that!) and that I was able to obtain some performance gains for very large matrices (\\(n&gt;20000\\)) with my heuristic. Still, it’s better to use the original implementation, although some work could be done to further improve it! To keep the tradition, I named my own program speedytree.\nTo be sure my implementation was correct, I elaborated an extensive suite of tests and explored the idea of property testing. In this testing technique, you simulate some random input to your function and assert that some property of the output is true. In my case, I simulated distance matrices from an additive binary tree and asserted that the topology (and the branch length) of the inferred tree was maintained using appropriate distance measures.\nA few months later, I was asked to publish it as a separate package so the Rust ecosystem could benefit from it (so I have at least one user!). As a result, I published it as speedytree on crates.io.\nuse speedytree::DistanceMatrix;\nuse speedytree::{NeighborJoiningSolver, Canonical};\n// Raw Phylip format\nlet input = \"5\n   a    0    5    9    9    8\n   b    5    0    10    10    9\n   c    9    10    0    8    7\n   d    9    10    8    0    3\n   e    8    9    7    3    0\n\".as_bytes();\nlet d = DistanceMatrix::read_from_phylip(input).expect(\"Invalid Phylip format\");\n// Canonical Neighbor Joining. Optimal for small problems.\nlet tree = NeighborJoiningSolver::&lt;Canonical&gt;::default(d)\n  .solve()\n  .expect(\"Failed to solve\");\nYou can take a look at the documentation of the crate or my slides, which are publicly available on GitHub if you want to know more!"
  },
  {
    "objectID": "posts/snakemake/index.html",
    "href": "posts/snakemake/index.html",
    "title": "Snakemake pipelines in the High-Throughput Sequencing Center of AU-ENVS",
    "section": "",
    "text": "Workflow management tools like  Snakemake or Nextflow have proven incredibly valuable in large-scale bioinformatics analysis. While I don’t have a particular preference, I have had extensive experience with Snakemake as a Student Assistant at the Environmental Sciences Department of Aarhus University.\n\n\n\n\n\nSnakemake files are just Python files extended with a declarative sugar syntax like MakeFiles. Unlike traditional Makefiles, it is designed explicitly for scientific workflows. \nIn my role, I have focused on automating pipelines for the High-Throughput Sequencing Center of Aarhus University (Roskilde). This has allowed me to delve into working with HPC clusters, employing Singularity containers, and gaining in-depth knowledge of the bioinformatics pipelines.\nTo date, I have developed in Snakemake a Whole-Genome Sequencing (WGS) pipeline for prokaryotes, a TotalRNA metatranscriptomics pipeline, and one pipeline for long-amplicon sequencing for Oxford Nanopore. Please check the recently published papers of Jaarsma et al. (2023) and Scheel et al. (2023) to see papers that used them.\nUsing Snakemake wrappers, small reusable scripts that facilitate using popular bioinformatics programs, has made my life much easier. When I had the time and saw the opportunity, I contributed with PRs to the snakemake-wrappers repository, improving or adding new features :)\nI have made all of my code publicly available on GitHub. I am very grateful to be in a work environment encouraging Free software. I always continue to be impressed by the open contributions of the scientific community to bioinformatics.\nIf you are more interested, I invite you to look at the organization’s repository (https://github.com/AU-ENVS-Bioinformatics/).\n\n\n\n\nReferences\n\nJaarsma, Ate H, Katie Sipes, Athanasios Zervas, Francisco Campuzano Jiménez, Lea Ellegaard-Jensen, Mariane S Thøgersen, Peter Stougaard, Liane G Benning, Martyn Tranter, and Alexandre M Anesio. 2023. “Exploring Microbial Diversity in Greenland Ice Sheet Supraglacial Habitats Through Culturing-Dependent and -Independent Approaches.” FEMS Microbiology Ecology 99 (11). https://doi.org/10.1093/femsec/fiad119.\n\n\nScheel, Maria, Athanasios Zervas, Ruud Rijkers, Alexander Tøsdal Tveit, Flemming Ekelund, Francisco Campuzano Jiménez, Torben Røjle Christensen, and Carsten Suhr Jacobsen. 2023. “Abrupt Permafrost Thaw Triggers Activity of Copiotrophs and Microbiome Predators.” FEMS Microbiology Ecology, October. https://doi.org/10.1093/femsec/fiad123."
  },
  {
    "objectID": "posts/hmmer-utils/index.html",
    "href": "posts/hmmer-utils/index.html",
    "title": "An R library to work with HMMER",
    "section": "",
    "text": "HMMERutils is a project I did as part of my internship at the Andalusian Research Institute in Data Science and Computational Intelligence (DaSCI) during 2021-2022, supervised by Coral del Val.\n\n\n\nHMMERutils tidyverse-like logo\n\n\nAs part of my bachelor thesis, I used HMMER to find homologous proteins to Fascin (a protein of clinical interest). Although the main idea was to use the Statistical Coupling Analysis method, I spent most of the time obtaining a curated homologous protein dataset. As a result, we devised HMMERutils: An R library for homologous sequences using the HMMER API, taxonomical annotation, calculate physicochemical properties, and facilitate exploratory analysis of homologous sequence data\nI haven’t found the time to upload it to BioConductor yet (and at this rate, I never will). Still, it was a super enriching experience to learn the guts of an R package, testing, and contiguous integration with GitHub Actions.\nIn this regard, the book R Packages by Hadley Wickham and Jennifer Bryan was the resource I used the most (and it is free). I can’t recommend it highly enough.\n\n\n\nR Packages book cover\n\n\nIf you are interested in the library you can of course visit the vignette: HMMERutils in a nutshell."
  },
  {
    "objectID": "posts/ngs/index.html",
    "href": "posts/ngs/index.html",
    "title": "Whole Genome Sequencing Poster",
    "section": "",
    "text": "Last summer, I took the PhD course Next Generation Sequencing Data Analysis at the Bioinformatics Research Centre, Aarhus University. We had a super exciting poster session as part of the course, and I just wanted to share mine here!\nI created a poster on a Whole-Genome sequencing + genome mining pipeline for isolates from environmental samples using Illumina."
  },
  {
    "objectID": "posts/birc-ggm/index.html",
    "href": "posts/birc-ggm/index.html",
    "title": "Assessing reliability of learning Gaussian graphical models from microbial abundances",
    "section": "",
    "text": "As part of my Master’s program at BiRC, I proposed to explore the reliability of microbial network inference. This topic, which is gaining popularity, has many overlooked issues and open challenges. In particular, I dug into the usage of Gaussian graphical models. I evaluated the performance of SPIEC-EASI (a popular method with more than 1300 citations at the time of writing) and a novel Bayesian method based on BDgraph.\nThe report, slides and all source code are publicly available on GitHub if you want to know more!"
  }
]